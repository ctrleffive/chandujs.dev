{"version":3,"sources":["webpack://chandujs.dev-web/./static/images/cover.png","webpack://chandujs.dev-web/./src/pages/resume.js"],"names":["InfoSection","title","children","css","ListItem","icon","skill","ColorsAdvanced","className","G","image","alt","ResumePage","render","isFromDownload","location","search","styles","Fonts","Helmet","defaultTitle","meta","name","content","lang","query","sanityResume","skills","education","languages","socialLinks","job","personName","nameSplitter","CoverImg","first","last","jobTitle","email","website","phone","map","item","index","usernameSplits","url","split","username","length","key","asset","localFile","childImageSharp","gatsbyImageData","value","course","duration","instituteName","level","aboutMe","companyName","designation","started","ended","details","desc","technologies","resp","responsibilities","Component"],"mappings":"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","file":"component---src-pages-resume-js-e2a6e0682a484b3dd588.js","sourcesContent":["export default __webpack_public_path__ + \"static/cover-876762a1d85a5cfffa7f7298c1e99710.png\";","/** @jsx jsx */\n\nimport { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { Global, css, jsx } from \"@emotion/react\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nimport { ColorsAdvanced, Fonts } from \"../styles/main\";\nimport { nameSplitter } from \"../utils/common\";\n\nimport CoverImg from \"../../static/images/cover.png\";\n\nconst InfoSection = ({ title, children }) => (\n  <div\n    css={css`\n      padding: 3rem;\n    `}\n  >\n    {title && (\n      <div\n        css={css`\n          text-transform: uppercase;\n          letter-spacing: 0.3rem;\n          font-size: 1.2rem;\n          opacity: 0.6;\n          margin-bottom: 2.5rem;\n        `}\n      >\n        {title}\n      </div>\n    )}\n    {children}\n  </div>\n);\n\nconst ListItem = ({ icon, title, skill, children }) =>\n  skill ? (\n    <div\n      css={css`\n        background-color: ${ColorsAdvanced.main};\n        color: #fff;\n        display: inline-block;\n        padding: 0.2rem 0.5rem;\n        margin: 0.1rem;\n        font-size: 1rem;\n        border-radius: 0.2rem;\n      `}\n    >\n      <span>{children}</span>\n    </div>\n  ) : (\n    <div\n      className={icon ? \"align-item-center d-flex\" : \"\"}\n      css={css`\n        margin-bottom: 1.5rem;\n        &:last-child {\n          margin-bottom: 0;\n        }\n      `}\n    >\n      {title ? (\n        <div\n          css={css`\n            text-transform: uppercase;\n            margin-bottom: 0.2rem;\n            font-weight: bold;\n            color: ${ColorsAdvanced.main};\n          `}\n        >\n          {title}\n        </div>\n      ) : (\n        \"\"\n      )}\n      {icon ? (\n        <GatsbyImage\n          css={css`\n            display: inline-block;\n            margin-right: 1rem;\n            width: 1.7rem;\n            position: relative;\n            top: -0.1rem;\n            margin-left: -0.1rem;\n            filter: invert(1);\n            opacity: 0.7;\n          `}\n          image={icon}\n          alt=\"Social Icon\"\n        />\n      ) : (\n        \"\"\n      )}\n      <span>{children}</span>\n    </div>\n  );\n\nexport default class ResumePage extends Component {\n  render = () => {\n    const isFromDownload = location.search === \"?5713b02f1a08470383db\";\n    return (\n      <div>\n        <Global\n          styles={css`\n            body,\n            html {\n              font-family: ${Fonts.body}, sans-serif;\n              font-size: 16px;\n              background-color: #dcdcdc;\n            }\n            p {\n              line-height: 1.7;\n              text-align: justify;\n              &:first-of-type {\n                margin-top: -0.1rem;\n              }\n              &:last-child {\n                margin-bottom: 0;\n              }\n            }\n          `}\n        />\n        <Helmet\n          defaultTitle={\"Resume - Chandu J S\"}\n          meta={[\n            {\n              name: \"robots\",\n              content: \"noindex\",\n            },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <StaticQuery\n          query={graphql`\n            {\n              sanityResume {\n                skills {\n                  value\n                }\n                aboutMe\n                education {\n                  course\n                  duration\n                  instituteName\n                }\n                email\n                phone\n                jobTitle\n                languages {\n                  level\n                  name\n                }\n                location\n                name\n                job {\n                  ended\n                  details\n                  location\n                  companyName\n                  designation\n                  responsibilities\n                  started\n                  technologies\n                }\n                socialLinks {\n                  name\n                  url\n                  icon {\n                    asset {\n                      localFile {\n                        childImageSharp {\n                          gatsbyImageData(layout: CONSTRAINED)\n                        }\n                      }\n                    }\n                  }\n                }\n                website\n              }\n            }\n          `}\n          render={({\n            sanityResume,\n            sanityResume: { skills, education, languages, socialLinks, job },\n          }) => {\n            const personName = nameSplitter(sanityResume.name);\n            return (\n              <div\n                css={css`\n                  @media (max-width: 1200px) {\n                    width: 100%;\n                    max-width: 100%;\n                    padding: 0;\n                  }\n                `}\n                className=\"container\"\n              >\n                <div\n                  css={css`\n                    background-color: #fff;\n                  `}\n                >\n                  <header\n                    css={css`\n                      background-image: url(${CoverImg});\n                      background-attachment: fixed;\n                      background-size: cover;\n                      background-position: center;\n                      background-color: ${ColorsAdvanced.main};\n                      padding: 5rem 3rem 3rem;\n                      color: #fff;\n                    `}\n                  >\n                    <div\n                      css={css`\n                        text-transform: uppercase;\n                        font-size: 3rem;\n                      `}\n                    >\n                      <strong>{personName.first}</strong> {personName.last}\n                    </div>\n                    <div\n                      css={css`\n                        text-transform: uppercase;\n                        letter-spacing: 0.1rem;\n                        margin-left: 0.2rem;\n                      `}\n                    >\n                      {sanityResume.jobTitle}\n                    </div>\n                  </header>\n                  <div className=\"row no-gutters\">\n                    <div\n                      className=\"col-md-4\"\n                      css={css`\n                        background-color: #ececec;\n                      `}\n                    >\n                      <InfoSection title=\"Contact\">\n                        <ListItem title=\"Location\">{sanityResume.location}</ListItem>\n                        <ListItem title=\"Email\">{sanityResume.email}</ListItem>\n                        <ListItem title=\"Website\">{sanityResume.website}</ListItem>\n                        {isFromDownload && <ListItem title=\"Phone\">{sanityResume.phone}</ListItem>}\n                      </InfoSection>\n                      <InfoSection title=\"Social\">\n                        {socialLinks.map((item, index) => {\n                          const usernameSplits = item.url.split(\"/\");\n                          const username = usernameSplits[usernameSplits.length - 1];\n                          return (\n                            <ListItem\n                              key={index}\n                              icon={item.icon.asset.localFile.childImageSharp.gatsbyImageData}\n                            >\n                              {`${item.name} @${username}`}\n                            </ListItem>\n                          );\n                        })}\n                      </InfoSection>\n                      <InfoSection title=\"Skills\">\n                        <div\n                          css={css`\n                            margin: -0.1rem;\n                            display: inline-block;\n                          `}\n                        >\n                          {skills.map(({ value }, index) => (\n                            <ListItem key={index} skill>\n                              {value}\n                            </ListItem>\n                          ))}\n                        </div>\n                      </InfoSection>\n                      <InfoSection title=\"Education\">\n                        {education.map((item, index) => (\n                          <ListItem key={index} title={item.course}>\n                            <div>{item.duration}</div>\n                            <div>{item.instituteName}</div>\n                          </ListItem>\n                        ))}\n                      </InfoSection>\n                      <InfoSection title=\"Languages\">\n                        {languages.map((item, index) => (\n                          <ListItem key={index} title={item.name}>\n                            {item.level}\n                          </ListItem>\n                        ))}\n                      </InfoSection>\n                    </div>\n                    <div className=\"col-md-8\">\n                      <InfoSection title=\"Professional Profile\">\n                        {(sanityResume.aboutMe || \"\").split(\"\\n\\n\").map((item, index) => (\n                          <p key={index}>{item}</p>\n                        ))}\n                      </InfoSection>\n                      <InfoSection title=\"Employment History\">\n                        {job.map((item, index) => (\n                          <div\n                            key={index}\n                            css={css`\n                              margin-bottom: 3rem;\n                              &:last-child {\n                                margin-bottom: 0;\n                              }\n                            `}\n                          >\n                            <div\n                              css={css`\n                                margin-bottom: 0.3rem;\n                              `}\n                            >\n                              <span\n                                css={css`\n                                  font-weight: bold;\n                                  font-size: 1.1rem;\n                                  color: ${ColorsAdvanced.main};\n                                `}\n                              >\n                                {item.companyName !== \"-\" ? `${item.companyName} - ` : \"\"}\n                                {item.designation}\n                              </span>\n                              <span className=\"float-right text-muted\">\n                                {item.started} - {item.ended || \"Present\"}\n                              </span>\n                            </div>\n                            <div\n                              css={css`\n                                margin-bottom: 1.5rem;\n                              `}\n                              className=\"text-muted\"\n                            >\n                              {item.location}\n                            </div>\n                            <div>\n                              {(item.details || \"\").split(\"\\n\\n\").map((desc, index) => (\n                                <p key={index}>{desc}</p>\n                              ))}\n                            </div>\n                            {item.technologies.length ? (\n                              <div\n                                css={css`\n                                  margin-top: 1.5rem;\n                                `}\n                              >\n                                <div\n                                  className=\"text-muted\"\n                                  css={css`\n                                    margin-bottom: 1rem;\n                                  `}\n                                >\n                                  Technologies Worked With\n                                </div>\n                                <ul\n                                  css={css`\n                                    margin-bottom: 0;\n                                    padding-left: 1.2rem;\n                                    li {\n                                      margin-bottom: 0.5rem;\n                                    }\n                                  `}\n                                >\n                                  {item.technologies.map((resp, index) => (\n                                    <li key={index}>{resp}</li>\n                                  ))}\n                                </ul>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                            {item.responsibilities.length ? (\n                              <div\n                                css={css`\n                                  margin-top: 1.5rem;\n                                `}\n                              >\n                                <div\n                                  className=\"text-muted\"\n                                  css={css`\n                                    margin-bottom: 1rem;\n                                  `}\n                                >\n                                  My Responsibilities\n                                </div>\n                                <ul\n                                  css={css`\n                                    margin-bottom: 0;\n                                    padding-left: 1.2rem;\n                                    li {\n                                      margin-bottom: 0.5rem;\n                                    }\n                                  `}\n                                >\n                                  {item.responsibilities.map((resp, index) => (\n                                    <li key={index}>{resp}</li>\n                                  ))}\n                                </ul>\n                              </div>\n                            ) : (\n                              \"\"\n                            )}\n                          </div>\n                        ))}\n                      </InfoSection>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          }}\n        />\n      </div>\n    );\n  };\n}\n"],"sourceRoot":""}