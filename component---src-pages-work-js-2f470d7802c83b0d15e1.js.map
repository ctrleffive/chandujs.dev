{"version":3,"sources":["webpack://chandujs.dev-web/./src/components/work-thumbnail.js","webpack://chandujs.dev-web/./src/pages/work.js"],"names":["WorkThumbnail","state","width","updateDimensions","setState","window","innerWidth","render","data","props","widthClass","className","css","to","slug","current","color","hex","Colors","G","image","thumbnail","asset","localFile","childImageSharp","gatsbyImageData","alt","title","category","map","index","key","subTitle","componentDidMount","this","addEventListener","componentWillUnmount","removeEventListener","Component","WorkPage","query","workItems","allSanityWork","edges","node","lightsOn","isWorkPage","pageBg","description","role","aria-label","item"],"mappings":"6RAQqBA,E,oJACnBC,MAAQ,CACNC,MAAO,G,EAGTC,iBAAmB,WACjB,EAAKC,SAAS,CACZF,MAAOG,OAAOC,c,EAYlBC,OAAS,WAAO,IAAD,IACPC,EAAO,EAAKC,MAAMD,KAEpBE,EAAa,WAWjB,OAVI,EAAKT,MAAMC,MAAQ,OACrBQ,EAAa,WACT,EAAKT,MAAMC,MAAQ,OACrBQ,EAAa,WACT,EAAKT,MAAMC,MAAQ,MACrBQ,EAAa,eAMjB,eACEC,UAAWD,EAAa,YACxBE,KAAKA,QAAF,uKAOH,QAAC,KAAD,CACEC,GAAE,SAAWL,EAAKM,KAAKC,QACvBJ,UAAU,kBACVC,KAAKA,QAAF,mhCAeqBJ,EAAKQ,aAf1B,aAeqB,EAAYC,WAfjC,QAewCC,cAuB3C,QAAC,EAAAC,EAAD,CAAaC,MAAOZ,EAAKa,UAAUC,MAAMC,UAAUC,gBAAgBC,gBAAiBC,IAAKlB,EAAKmB,SAC9F,eACEf,KAAKA,QAAF,ohBAkBHD,UAAU,iBAEV,eACEC,KAAKA,QAAF,sJAMFJ,EAAKmB,QAER,mBACGnB,EAAKoB,SAASC,KAAI,SAACD,EAAUE,GAAX,OACjB,gBACEC,IAAKD,EACLlB,KAAKA,QAAF,sFAIFgB,EAASD,YAIhB,eACEf,KAAKA,QAAF,yEAGHD,UAAU,gBAETH,EAAKwB,c,0CA1HlBC,kBAAA,WACEC,KAAK/B,mBACLE,OAAO8B,iBAAiB,SAAUD,KAAK/B,mB,EAEzCiC,qBAAA,WACE/B,OAAOgC,oBAAoB,SAAUH,KAAK/B,mB,GAhBHmC,aCEtBC,E,oJACnBhC,OAAS,WACP,OACE,QAAC,KAAD,CACEiC,MAAK,aA+BLjC,OAAQ,YAAwB,IACxBkC,EADuB,EAApBC,cACuBC,MAAMd,KAAI,qBAAGe,QAC7C,OACE,QAAC,IAAD,CACEC,UAAQ,EACRC,YAAU,EACVC,QAAQ,QAAC,IAAD,MACRpB,MAAM,oBACNqB,YAAY,4CAEZ,eAAKrC,UAAU,iBACb,eAAKA,UAAU,4BAAf,OACK,gBAAMA,UAAU,QAAhB,SACH,gBAAMA,UAAU,WAAhB,MACA,qBAEF,eACEA,UAAU,eACVC,KAAKA,QAAF,kFAFL,wDAMsD,mBANtD,4BAO4B,KAC1B,gBAAMqC,KAAK,MAAMC,aAAW,OAA5B,MAEQ,IAVV,qCAaA,eACEvC,UAAU,MACVC,KAAKA,QAAF,qNAOF6B,EAAUZ,KAAI,SAACsB,EAAMrB,GAAP,OACb,QAAC9B,EAAD,CAAe+B,IAAKD,EAAOtB,KAAM2C,c,wBA1Efb","file":"component---src-pages-work-js-2f470d7802c83b0d15e1.js","sourcesContent":["/** @jsx jsx */\n\nimport { css, jsx } from \"@emotion/react\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport { Component } from \"react\";\nimport { Colors } from \"../styles/main\";\n\nexport default class WorkThumbnail extends Component {\n  state = {\n    width: 0,\n  };\n\n  updateDimensions = () => {\n    this.setState({\n      width: window.innerWidth,\n    });\n  };\n\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render = () => {\n    const data = this.props.data;\n\n    let widthClass = \"col-xl-4\";\n    if (this.state.width > 1800) {\n      widthClass = \"col-xl-3\";\n      if (this.state.width > 2550) {\n        widthClass = \"col-xl-2\";\n        if (this.state.width > 4000) {\n          widthClass = \"col-xl-1\";\n        }\n      }\n    }\n\n    return (\n      <div\n        className={widthClass + \" col-md-6\"}\n        css={css`\n          margin-bottom: 1.4rem;\n          @media screen and (max-width: 766px) {\n            margin-bottom: 0.8rem;\n          }\n        `}\n      >\n        <Link\n          to={`/work/${data.slug.current}`}\n          className=\"overflow-hidden\"\n          css={css`\n            display: inline-block;\n            position: relative;\n            z-index: 0;\n            height: 300px;\n            width: 100%;\n            border-radius: 5px;\n            box-shadow: rgba(0, 0, 0, 0.05) 0 1px 2px;\n            &:before {\n              content: \"\";\n              position: absolute;\n              top: 0;\n              left: 0;\n              right: 0;\n              bottom: 0;\n              background-color: ${data.color?.hex ?? Colors.brand};\n              z-index: 1;\n              transition-duration: 0.2s;\n              opacity: 0;\n\n              @media screen and (max-width: 766px) {\n                opacity: 0.9;\n              }\n            }\n            &:hover {\n              &:before {\n                opacity: 0.95;\n              }\n              .item-details {\n                opacity: 1;\n                bottom: -0.6rem;\n              }\n            }\n            .gatsby-image-wrapper {\n              width: 100% !important;\n            }\n          `}\n        >\n          <GatsbyImage image={data.thumbnail.asset.localFile.childImageSharp.gatsbyImageData} alt={data.title} />\n          <div\n            css={css`\n              position: absolute;\n              z-index: 1;\n              mix-blend-mode: multiply;\n              bottom: -3rem;\n              right: 0;\n              left: 0;\n              opacity: 0;\n              padding-top: 10rem;\n              padding-left: 2rem;\n              padding-bottom: 2.2rem;\n              transition-duration: 0.2s;\n\n              @media screen and (max-width: 766px) {\n                opacity: 1;\n                bottom: -0.6rem;\n              }\n            `}\n            className=\"item-details\"\n          >\n            <div\n              css={css`\n                font-weight: bold;\n                font-size: 1.95rem;\n                margin-bottom: 0rem;\n              `}\n            >\n              {data.title}\n            </div>\n            <div>\n              {data.category.map((category, index) => (\n                <span\n                  key={index}\n                  css={css`\n                    margin-right: 1.5rem;\n                  `}\n                >\n                  {category.title}\n                </span>\n              ))}\n            </div>\n            <div\n              css={css`\n                margin-top: 1rem;\n              `}\n              className=\"item-tagline\"\n            >\n              {data.subTitle}\n            </div>\n          </div>\n        </Link>\n      </div>\n    );\n  };\n}\n","/** @jsx jsx */\n\nimport { css, jsx } from \"@emotion/react\";\nimport Wrap from \"../layouts/wrap\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { Component } from \"react\";\n\nimport PageBg from \"../assets/images/bgs/work.svg\";\nimport WorkThumbnail from \"../components/work-thumbnail\";\n\nexport default class WorkPage extends Component {\n  render = () => {\n    return (\n      <StaticQuery\n        query={graphql`\n          {\n            allSanityWork(sort: { order: DESC, fields: publishedAt }) {\n              edges {\n                node {\n                  slug {\n                    current\n                  }\n                  title\n                  category {\n                    title\n                    id\n                  }\n                  color {\n                    hex\n                  }\n                  subTitle\n                  thumbnail {\n                    asset {\n                      localFile {\n                        childImageSharp {\n                          gatsbyImageData(layout: FIXED, height: 300)\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={({ allSanityWork }) => {\n          const workItems = allSanityWork.edges.map(({ node }) => node);\n          return (\n            <Wrap\n              lightsOn\n              isWorkPage\n              pageBg={<PageBg />}\n              title=\"Work - Chandu J S\"\n              description=\"Here is the listing of some of my work.\"\n            >\n              <div className=\"content-wrap\">\n                <div className=\"h1 font-weight-bold mb-3\">\n                  My <span className=\"high\">Work</span>\n                  <span className=\"blinker\">.</span>\n                  <br />\n                </div>\n                <div\n                  className=\"h5 mb-4 pb-4\"\n                  css={css`\n                    line-height: 1.6;\n                  `}\n                >\n                  I am a lover of anything and everything technology. <br />\n                  But when I am not kicking{\" \"}\n                  <span role=\"img\" aria-label=\"ass\">\n                    üçë\n                  </span>{\" \"}\n                  with my keyboard, I make photos.\n                </div>\n                <div\n                  className=\"row\"\n                  css={css`\n                    @media screen and (max-width: 766px) {\n                      margin-left: -2rem;\n                      margin-right: -2rem;\n                    }\n                  `}\n                >\n                  {workItems.map((item, index) => (\n                    <WorkThumbnail key={index} data={item} />\n                  ))}\n                </div>\n              </div>\n            </Wrap>\n          );\n        }}\n      />\n    );\n  };\n}\n"],"sourceRoot":""}